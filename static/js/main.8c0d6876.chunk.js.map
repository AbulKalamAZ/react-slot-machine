{"version":3,"sources":["components/SlotMachineHeader.js","components/SlotMachineButton.js","components/SlotMachineReel.js","components/SlotMachineResult.js","components/SlotMachine.js","components/App.js","index.js"],"names":["headerStyle","width","height","padding","color","lineHeight","headerWrapperStyle","margin","fontWeight","letterSpacing","headerParaStyle","fontSize","marginTop","SlotMachineHeader","react_default","a","createElement","style","SlotMachineButton","props","className","onClick","spinTheReel","SlotMachineReel","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","newProps","setState","renderprops","to","translate","config","mass","tension","friction","transform","concat","Component","SlotMachineResult","result","colors","initialRandomColor","Math","floor","random","length","checkResult","array","SlotMachine","setNewColor","isButtonPressed","randomColor","buttonPressed","bind","SlotMachineReel_SlotMachineReel","SlotMachineResult_SlotMachineResult","ref","App","components_SlotMachineHeader","SlotMachine_SlotMachine","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.8c0d6876.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nconst SlotMachineHeader = () => {\r\n    return (\r\n        <header style={headerStyle}>\r\n\r\n            <div style={headerWrapperStyle}>\r\n\r\n                <h1>Slot Machine App</h1>\r\n\r\n                <p style={headerParaStyle}>This is a test project given by AuraSide. Press 'Play' button to test how close you can get. I used reactjs and react-spring here</p>\r\n\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\n\r\n// style for header goes below\r\n\r\nconst headerStyle = {\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n    padding: \"50px 0 20px 0\",\r\n    color: \"rgb(17, 89, 89, 0.8)\",\r\n    lineHeight: \"1.25\"\r\n}\r\n\r\nconst headerWrapperStyle = {\r\n    width: \"60%\",\r\n    margin: \"0 auto\",\r\n    fontWeight: \"600\",\r\n    letterSpacing: \".35px\"\r\n}\r\n\r\nconst headerParaStyle = {\r\n    color: \"#2E6B52\",\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: \"400\",\r\n    marginTop: \"20px\"\r\n\r\n}\r\n\r\nexport default SlotMachineHeader;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function SlotMachineButton(props) {\r\n\r\n    return (\r\n        <div className=\"lever\">\r\n            <button\r\n                className=\"play-button\"\r\n                onClick={props.spinTheReel}\r\n            >\r\n                Play\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n//Type checking using propTypes\r\n\r\nSlotMachineButton.propTypes = {\r\n    spinTheReel: PropTypes.func\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Spring } from 'react-spring/renderprops';\r\n\r\n\r\nexport default class SlotMachineReel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            color: this.props.color\r\n        }\r\n    }\r\n\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (this.props.color !== newProps.color) {\r\n            this.setState({\r\n                color: newProps.color\r\n            })\r\n        } else {\r\n            if (this.state.color === 0) {\r\n                this.setState({\r\n                    color: -576\r\n                })\r\n            } else if (this.state.color === 144) {\r\n                this.setState({\r\n                    color: -432\r\n                })\r\n            } else if (this.state.color === 288) {\r\n                this.setState({\r\n                    color: -288\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    color: -144\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Spring\r\n                to={{ translate: this.state.color }}\r\n                config={{ mass: 100, tension: 100, friction: 100 }}\r\n            >\r\n\r\n                {props => (\r\n                    <div\r\n                        className=\"slot-wrapper\"\r\n                        style={{ transform: `translate3d(0px, ${props.translate}px, 0px)` }}\r\n                    >\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                    </div>\r\n                )\r\n                }\r\n\r\n\r\n            </Spring>\r\n        )\r\n    }\r\n}\r\n\r\nSlotMachineReel.propTypes = {\r\n    color: PropTypes.number\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\n\r\nexport default class SlotMachineResult extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"result-board\">\r\n                <h1>{this.props.result}</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport '../css/SlotMachine.css'\r\nimport SlotMachineButton from './SlotMachineButton';\r\nimport SlotMachineReel from './SlotMachineReel';\r\nimport SlotMachineResult from './SlotMachineResult';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n//Defining an array for colors\r\nconst colors = [0, 144, 288, 432];\r\nvar result = 'Press Play Button';\r\n\r\n// This function will generate a random element from colors array\r\nconst initialRandomColor = () => {\r\n    return colors[Math.floor((Math.random() * colors.length))];\r\n}\r\n\r\n//This function will check the result wheather the player wins or not\r\n\r\nconst checkResult = (array) => {\r\n\r\n    if (array[0] === array[1]) {\r\n        if (array[0] === array[2]) {\r\n            return \"Whoo! You Win!!\"\r\n        } else {\r\n            return \"You got close enough!\"\r\n        }\r\n    } else {\r\n        return \"Better luck next time!\"\r\n    }\r\n}\r\n\r\n\r\nexport default class SlotMachine extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            randomColor: [initialRandomColor(), initialRandomColor(), initialRandomColor()]\r\n        }\r\n    }\r\n\r\n    setNewColor = (array) => {\r\n        if (!this.props.isButtonPressed) {\r\n            result = \"Spinning . . .\"\r\n            this.setState({\r\n                randomColor: array\r\n            });\r\n            this.props.buttonPressed();\r\n        }\r\n\r\n\r\n        result = checkResult(array);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"slot-machine\">\r\n\r\n                    <SlotMachineButton\r\n                        spinTheReel={this.setNewColor.bind(this, [initialRandomColor(), initialRandomColor(), initialRandomColor()])}\r\n                    />\r\n\r\n                    <div className=\"group\">\r\n\r\n                        <div className=\"reel\">\r\n                            <SlotMachineReel color={this.state.randomColor[0]} />\r\n                        </div>\r\n                        <div className=\"reel\">\r\n                            <SlotMachineReel color={this.state.randomColor[1]} />\r\n                        </div>\r\n                        <div className=\"reel\">\r\n                            <SlotMachineReel color={this.state.randomColor[2]} />\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <SlotMachineResult ref=\"result\" result={result} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// type checking using proptypes\r\n\r\nSlotMachine.propTypes = {\r\n    buttonPressed: PropTypes.func\r\n}","import React, { Component } from \"react\";\r\nimport \"../css/App.css\";\r\nimport SlotMachineHeader from './SlotMachineHeader';\r\nimport SlotMachine from './SlotMachine';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isButtonPressed: false\r\n    }\r\n  }\r\n\r\n  buttonPressed() {\r\n    if (!this.state.isButtonPressed) {\r\n      this.setState({\r\n        isButtonPressed: !this.state.isButtonPressed\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SlotMachineHeader />\r\n\r\n        <SlotMachine buttonPressed={this.buttonPressed.bind(this)} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}